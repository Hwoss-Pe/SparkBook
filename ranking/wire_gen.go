// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"Webook/ranking/grpc"
	"Webook/ranking/ioc"
	"Webook/ranking/repository"
	"Webook/ranking/repository/cache"
	"Webook/ranking/service"
	"github.com/google/wire"
)

// Injectors from wire.go:

func Init() *App {
	interactiveServiceClient := ioc.InitInterActiveRpcClient()
	articleServiceClient := ioc.InitArticleRpcClient()
	cmdable := ioc.InitRedis()
	redisRankingCache := cache.NewRedisRankingCache(cmdable)
	rankingLocalCache := cache.NewRankingLocalCache()
	rankingRepository := repository.NewCachedRankingRepository(redisRankingCache, rankingLocalCache)
	rankingService := service.NewBatchRankingService(interactiveServiceClient, articleServiceClient, rankingRepository)
	rankingServiceServer := grpc2.NewRankingServiceServer(rankingService)
	client := ioc.InitEtcdClient()
	logger := ioc.InitLogger()
	server := ioc.InitGRPCxServer(rankingServiceServer, client, logger)
	app := &App{
		server: server,
	}
	return app
}

// wire.go:

var serviceProviderSet = wire.NewSet(cache.NewRankingLocalCache, cache.NewRedisRankingCache, repository.NewCachedRankingRepository, service.NewBatchRankingService)

var thirdProvider = wire.NewSet(ioc.InitRedis, ioc.InitInterActiveRpcClient, ioc.InitArticleRpcClient, ioc.InitEtcdClient, ioc.InitLogger)
